rm(list=ls())
library(dplyr)
library(ggplot2)
library(tidyr)
library(lubridate)
library(reshape2)
return = read.csv("datasets/Inflation_Adjusted_Return.csv")
rob = read.csv("datasets/Robert_Shiller_CPI_adjusted_Return.csv")
limit = read.csv("datasets/IRA-Contribution-Limit.csv")
return = merge(return, rob, by=c("Year","Month"))
colnames(return)[18:19] = c("RS_adjusted_Price","RS_adjusted_GR")
# View(return)
## Add&adjust Time&portfolio column
measures = c("CPI", "CPIC", "PPI", "PCE")
return_types = c("GR", "PR") ##GR: gross return, PR: price return
for (measure in measures){
for (return_type in return_types){
return[nrow(return),ncol(return)+1] = 1000000 ## To reach 1m after 2019 Dec
names(return)[ncol(return)] = paste0(measure,"_",return_type,"_","portfolio")
}
}
return = return[seq(dim(return)[1],1),]
for (i in 20:27){
for (j in 2:nrow(return)){
if (i==20 | i==21){ return[j,i]=return[j-1,i]/(1+return[j,i-14]) }
if (i==22 | i==23){ return[j,i]=return[j-1,i]/(1+return[j,i-13]) }
if (i==24 | i==25){ return[j,i]=return[j-1,i]/(1+return[j,i-12]) }
if (i==26 | i==27){ return[j,i]=return[j-1,i]/(1+return[j,i-11]) }
}
}
## Robert Shiller Adjusted returns
return[1,ncol(return)+1] = 1000000 ## To reach 1m after 2019 Dec
names(return)[ncol(return)] = "RS_GR_portfolio"
for (j in 2:nrow(return)){ return[j,28]=return[j-1,28]/(1+return[j,19]) }
return = return %>% mutate(Time=paste0(Year,'/',sprintf("%02d", return$Month),'/',01))
return$Time = as.Date(return$Time, format = "%Y/%m/%d")
return = return[seq(dim(return)[1],1),]
return = na.omit(return)
par(mfrow = c(2, 2))
# reshape data from wide to long format
# GR normal scale
long = melt(return, measure.vars=c('CPI_GR_portfolio','CPIC_GR_portfolio','PPI_GR_portfolio','PCE_GR_portfolio','RS_GR_portfolio')) %>% select(Time, variable, value)
g = ggplot(long, aes(Time, value, shape = variable, color = factor(variable))) +
geom_line() +
scale_x_date(date_breaks = "10 years")+
labs(title="Starting GR portfolio real value to reach $1m in 2020", color = "Portfolio")+
ylab("Portfolio real value in US dollars")+
guides(color = guide_legend(override.aes = list(size=3)))+
theme_minimal()
print(g)
# PR normal scale
long = melt(return, measure.vars=c('CPI_PR_portfolio','CPIC_PR_portfolio','PPI_PR_portfolio','PCE_PR_portfolio')) %>% select(Time, variable, value)
g = ggplot(long, aes(Time, value, shape = variable, color = factor(variable))) +
geom_line() +
scale_x_date(date_breaks = "10 years")+
labs(title="Starting PR portfolio real value to reach $1m in 2020", color = "Portfolio")+
ylab("Portfolio real value in US dollars")+
guides(color = guide_legend(override.aes = list(size=3)))+
theme_minimal()
print(g)
## Log-scaled portfolios
for (col in 20:28){return[col] = log(return[col])}
# reshape data from wide to long format
# GR logged scale
long = melt(return, measure.vars=c('CPI_GR_portfolio','CPIC_GR_portfolio','PPI_GR_portfolio','PCE_GR_portfolio','RS_GR_portfolio')) %>% select(Time, variable, value)
g = ggplot(long, aes(Time, value, shape = variable, color = factor(variable))) +
geom_line() +
scale_x_date(date_breaks = "10 years")+
labs(title="Logged starting GR portfolio real value to reach $1m in 2020", color = "Portfolio")+
ylab("Logged portfolio real value in US dollars")+
guides(color = guide_legend(override.aes = list(size=3)))+
theme_minimal()
print(g)
# PR logged scale
long = melt(return, measure.vars=c('CPI_PR_portfolio','CPIC_PR_portfolio','PPI_PR_portfolio','PCE_PR_portfolio')) %>% select(Time, variable, value)
g = ggplot(long, aes(Time, value, shape = variable, color = factor(variable))) +
geom_line() +
scale_x_date(date_breaks = "10 years")+
labs(title="Logged starting portfolio real value to reach $1m in 2020", color = "Portfolio x Deflation \nmethod combinations")+
ylab("Logged portfolio real value in US dollars")+
guides(color = guide_legend(override.aes = list(size=3)))+
theme_minimal()
print(g)
## Time taken from $0 to $1m
for (measure in measures){
for (return_type in return_types){
return[1,ncol(return)+1] = 0 ## To reach 1m after 2019 Dec
names(return)[ncol(return)] = paste0(measure,"_",return_type,"_","t")
}
}
## RS
return[1,ncol(return)+1] = 0 ## To reach 1m after 2019 Dec
names(return)[ncol(return)] = "RS_GR_t"
load("Time to 1m.RData")
for (col in 29:37){
## Convert t to year scale
return[col]=return[col]/12
p=ggplot(return, aes_string(return[,col]))+
geom_bar(fill=I("steelblue"),color="white", binwidth = 1)+
labs(title=names(return)[col])+
xlab("Time to reach $1m in years")+
geom_vline(aes(xintercept = mean(return[,col],na.rm = TRUE)),col='blue',size=2)+
annotate("text", x=mean(return[,col],na.rm = TRUE)-1, y=max(return[,col],na.rm = TRUE), label= paste("Mean:\n",round(mean(return[,col],na.rm = TRUE),1),"years"))+
geom_vline(aes(xintercept = median(return[,col],na.rm = TRUE)),col='red',size=2)+
annotate("text", x=median(return[,col],na.rm = TRUE)+1, y=max(return[,col],na.rm = TRUE), label= paste("Median:\n",round(mean(return[,col],na.rm = TRUE),1),"years"))+
theme_minimal()
print(p)
}
# GR
return.temp = return %>%
gather(Portfolio, t, c('CPI_GR_t','CPIC_GR_t','PPI_GR_t','PCE_GR_t','RS_GR_t')) %>%
select(Portfolio, t)
p = ggplot(return.temp, aes(x=Portfolio, y=t), color=as.factor(Portfolio)) +
geom_boxplot(fill=I("white"),color="steelblue")+
xlab("Portfolio x Inflation adjustment method")+
ylab("Time to $1m in years")+
theme_minimal()+
labs(title="Time to reach $1m for different GR portfolios")+
annotate("text", x=5, y=median(return.temp$t,na.rm = TRUE)-3, label= paste("Median:",round(median(return.temp$t,na.rm = TRUE),1),"years"),color="blue")+
geom_hline(aes(yintercept = median(return.temp$t,na.rm = TRUE)),col='blue',lty=2,size=1)+
stat_summary(fun.y=median, colour="red", geom="text", show_guide = FALSE, vjust=1.5, aes(label=round(..y.., digits=1)))+
stat_summary(fun.y=median, colour="darkred", geom="point", hape=18, size=3,show_guide = FALSE)+
annotate("text", x=5, y=mean(return.temp$t,na.rm = TRUE)+3, label= paste("Mean:",round(mean(return.temp$t,na.rm = TRUE),1),"years"),color="red")+
geom_hline(aes(yintercept = mean(return.temp$t,na.rm = TRUE)),col='red',lty=2,size=1)
print(p)
#PR
return.temp = return %>%
gather(Portfolio, t, c('CPI_PR_t','CPIC_PR_t','PPI_PR_t','PCE_PR_t')) %>%
select(Portfolio, t)
p = ggplot(return.temp, aes(x=Portfolio, y=t), color=as.factor(Portfolio)) +
geom_boxplot(fill=I("white"),color="steelblue")+
xlab("Portfolio x PR")+
ylab("Time to $1m in years")+
theme_minimal()+
labs(title="Time to reach $1m for different PR portfolios")+
annotate("text", x=3, y=median(return.temp$t,na.rm = TRUE)+2, label= paste("Median:",round(median(return.temp$t,na.rm = TRUE),1),"years"),color="blue")+
geom_hline(aes(yintercept = median(return.temp$t,na.rm = TRUE)),col='blue',lty=2,size=1)+
stat_summary(fun.y=median, colour="red", geom="text", show_guide = FALSE, vjust=1.5, aes(label=round(..y.., digits=1)))+
stat_summary(fun.y=median, colour="darkred", geom="point", hape=18, size=3,show_guide = FALSE)+
annotate("text", x=3, y=mean(return.temp$t,na.rm = TRUE)-2, label= paste("Mean:",round(mean(return.temp$t,na.rm = TRUE),1),"years"),color="red")+
geom_hline(aes(yintercept = mean(return.temp$t,na.rm = TRUE)),col='red',lty=2,size=1)
print(p)
